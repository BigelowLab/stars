
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(stars)
Loading required package: abind
Loading required package: sf
Linking to GEOS 3.10.2, GDAL 3.4.3, PROJ 8.2.0; sf_use_s2() is TRUE
> 
> if (require(spacetime, quietly = TRUE)) {
+ data(air) # this loads several datasets in .GlobalEnv
+ dim(air)
+ d = st_dimensions(station = st_set_crs(st_as_sfc(stations), 4326), time = dates)
+ 
+ blocks = st_make_grid(st_as_sfc("POLYGON ((5.871619 47.26986, 15.03811 47.26986, 15.03811 55.05653, 5.871619 55.05653, 5.871619 47.26986))", crs = 4326),
+ 	n = c(3,3))
+ 
+ (aq = st_as_stars(list(PM10 = air), dimensions = d))
+ (a = aggregate(aq, blocks, mean, na.rm = TRUE))
+ 
+ # adapted from ?read_stars:
+ m = array(1:720, dim = c(x = 10, y = 12, t = 6)) # named dim
+ st = st_as_stars(m)
+ attr(st, "dimensions")$y$delta = -1
+ attr(st, "dimensions")$y$offset = 12
+ tm = as.Date("2019-02-19") + 1:6
+ st = st_set_crs(st_set_dimensions(st, 3, values = tm), 4326)
+ 
+ tmp = tempfile(fileext = ".tif")
+ write_stars(st, tmp)
+ 
+ (red <- read_stars(tmp, RasterIO = list(nXOff = 1, nYOff = 1, nXsize = 10, nYSize = 12,
+    nBufXSize = 2, nBufYSize = 2)))
+ 
+ sfc = st_set_crs(st_as_sfc(red, as_points = FALSE), st_crs(st))
+ (a = aggregate(st, sfc, mean))
+ a[[1]]
+ sum(a[[1]])*30 == sum(1:720)
+ 
+ tm0 = as.Date("2019-02-19") + -1:8
+ (a = aggregate(st, tm0, mean, na.rm = TRUE))
+ 
+ # with "by" geometry not overlapping x
+ pt = st_point(c(-10,-10))
+ (sfc = c(sfc, st_sfc(pt, crs = st_crs(sfc))))
+ (a = aggregate(st, sfc, mean))
+ 
+ (a = aggregate(st, st, mean))
+ }
stars object with 2 dimensions and 1 attribute
attribute(s):
    Min. 1st Qu. Median  Mean 3rd Qu. Max.
A1     1  180.75  360.5 360.5  540.25  720
dimension(s):
         from  to     offset  delta refsys point
geometry    1 120         NA     NA WGS 84 FALSE
t           1   6 2019-02-20 1 days   Date FALSE
                                                                    values
geometry POLYGON ((0 12, 1 12, 1 11,...,...,POLYGON ((9 1, 10 1, 10 0, ...
t                                                                     NULL
> 
> proc.time()
   user  system elapsed 
  1.833   0.048   1.877 
